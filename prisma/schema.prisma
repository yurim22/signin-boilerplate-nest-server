// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model patient {
  seq       Int      @id @default(autoincrement())
  creation_timestamp DateTime @default(now())
  patient_id         String
  patient_name       String?
  patient_sex        String
  patient_age        String   @default("")
  study              study[]

  @@index([patient_id], name: "patient_id")
}

model receive_pacs {
  creation_timestamp DateTime @default(now())
  update_timestamp   DateTime?
  receive_pacs_index Int      @id @default(0)
  AE                 String
  host_ip            String
  port               Int
  user_id            String   @unique
  user               user     @relation(fields: [user_id], references: [id])
}

model send_pacs {
  creation_timeStamp DateTime @default(now())
  update_timestamp   DateTime?
  send_pacs_index    Int      @id @default(0)
  AE                 String
  client_ip          String
  port               Int
  user_id            String   @unique
  user               user     @relation(fields: [user_id], references: [id])
}

model series {
  seq Int    @id @default(autoincrement())
  image_url  String
  study_seq Int @unique
  study      study  @relation(fields: [study_seq], references: [seq])
}

model study {
  seq     Int          @id @default(autoincrement())
  status        study_status @default(ANALYZED)
  patient_id    String
  study_date    DateTime
  analysis_date DateTime
  result        String
  volumes       String
  patient       patient      @relation(fields: [patient_id], references: [patient_id])
  series        series?
  user          user[]       @relation("studyuserconfirm")

  @@index([patient_id], name: "patient_id")
}

model user {
  seq           Int             @id @default(autoincrement())
  id            String          @unique
  password      String
  name          String
  permission         Permission @default(PHYSICIAN)
  institution        String?
  creation_timestamp DateTime        @default(now())
  update_timestamp   DateTime?
  invalid_password_count Int? @default(0)
  last_password_update_timestamp Int @default(0)
  receive_pacs       receive_pacs?
  send_pacs          send_pacs?
  study              study[]         @relation("studyuserconfirm")
  user_signin_history           user_signin_history[]
}

model user_signin_history {
  id String
  ip String?
  seq Int @default(autoincrement()) @id
  sign_in_timestamp Int @default(0)
  sign_out_timestamp Int @default(0)
  user user @relation(fields: [id], references: [id])

  @@index([id], name: "id")
}

enum Permission {
  ADMINISTRATOR
  PHYSICIAN
  DEVELOPER
}

enum study_status {
  RECEIVED
  ANALYZED
  REVIEWED
}
